name: FeatureBranch

env:
  Solution: source/${{ github.event.repository.name }}.sln
  Configuration: Release
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

on:
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Set Version
      id: SetVersion
      run: |
        $VersionNumber = Get-Content "version.txt"
        $PackageVersion = "$($VersionNumber)-pre.${{ github.run_number }}"
        $FileVersion = "$($VersionNumber).${{ github.run_number }}"
        $AssemblyVersion = "$($VersionNumber).0"
        $InformationalVersion = "$($FileVersion) ${{ github.sha }}"

        Write-Output "::set-output name=VERSION::$PackageVersion"

        [xml]$Props = Get-Content "Directory.Build.props"
        $Props.Project.PropertyGroup.PackageVersion = $PackageVersion
        $Props.Project.PropertyGroup.FileVersion = $FileVersion
        $Props.Project.PropertyGroup.AssemblyVersion = $AssemblyVersion
        $Props.Project.PropertyGroup.InformationalVersion = $InformationalVersion

        $Props.Save("Directory.Build.props")

    - name: Compile
      run: dotnet build "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo

    - name: Test
      run: dotnet test "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo --no-build /p:collectcoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=../../Artifacts/Logs/coverage '--logger:nunit;LogFilePath="../../Artifacts/Logs/{assembly}.{framework}.TestResults.xml"' '--logger:trx;LogFileName="Relativity.Testing.Framework.Tests.NETFramework462.TestResults.trx"'

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: Logs
        path: Artifacts/Logs/

    - name: Package
      run: dotnet pack "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo --no-build --include-symbols

    - name: Upload NuGet Packages
      uses: actions/upload-artifact@v2
      with:
        name: NuGetPackages
        path: Artifacts/NuGet/

    - name: Get OTEL Token
      id: GetOtelToken
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      run: |
        $Body = @{
          grant_type = "client_credentials"
          client_id = "${{ env.ClientId }}"
          client_secret = "${{ env.CLIENTSECRET }}"
          scope = "https://vault.azure.net/.default"
        }

        $AccessToken = (Invoke-RestMethod -Method POST `
          -Uri "https://login.microsoftonline.com/${{ env.DirectoryId }}/oauth2/v2.0/token" `
          -Body $Body).access_token

        $OtelToken = (Invoke-RestMethod -Method GET `
          -Uri "https://testengineering-github.vault.azure.net/secrets/OtelWebhookTokenForTestEngineering?api-version=7.1" `
          -Headers @{ Authorization="Bearer $AccessToken" }).value

        $Merge = ${{ github.context.payload.head_commit.timestamp }}
        $Now = Get-Date
        $Duration = (New-TimeSpan -Start $Merge -End $Now).Seconds
        Write-Output $Merge $Now $Duration

        $BuildEventPayload = '{
            "event": true,
            "name": "buildtest",
            "r1.team.id": "PTCI-1599",
            "job.id": ${{ github.run_id }},
            "job.sub_id": ${{ github.run_attempt }},
            "job.result": ${{ job.status }},
            "job.duration": $Duration,
            "job.name": ${{ github.context.payload.repository.full_name }},
            "job.url": "${{ github.context.payload.repository.svn_url }}/runs/${{ github.context.runId }}/attempts/${{ github.context.runNumber }}",
            "application.name": ${{ github.context.payload.repository.name }},
            "type": "devops_metrics"
        }'

        Invoke-RestMethod -Method POST `
            -Uri "https://services.ctus.reg.k8s.r1.kcura.com/maas/webhook/generic/v1?token=$OtelToken" `
            -Body $BuildEventPayload
