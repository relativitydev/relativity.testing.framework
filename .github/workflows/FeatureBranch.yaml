name: FeatureBranch

env:
  Solution: source/${{ github.event.repository.name }}.sln
  Configuration: Release
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  # CUSTOM_ACTION_DIRECTORY: ./github/actions/sendBuild

on:
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Set Version
      id: SetVersion
      run: |
        $VersionNumber = Get-Content "version.txt"
        $PackageVersion = "$($VersionNumber)-pre.${{ github.run_number }}"
        $FileVersion = "$($VersionNumber).${{ github.run_number }}"
        $AssemblyVersion = "$($VersionNumber).0"
        $InformationalVersion = "$($FileVersion) ${{ github.sha }}"

        Write-Output "::set-output name=VERSION::$PackageVersion"

        [xml]$Props = Get-Content "Directory.Build.props"
        $Props.Project.PropertyGroup.PackageVersion = $PackageVersion
        $Props.Project.PropertyGroup.FileVersion = $FileVersion
        $Props.Project.PropertyGroup.AssemblyVersion = $AssemblyVersion
        $Props.Project.PropertyGroup.InformationalVersion = $InformationalVersion

        $Props.Save("Directory.Build.props")

    - name: Compile
      run: dotnet build "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo

    - name: Test
      run: dotnet test "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo --no-build /p:collectcoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=../../Artifacts/Logs/coverage '--logger:nunit;LogFilePath="../../Artifacts/Logs/{assembly}.{framework}.TestResults.xml"' '--logger:trx;LogFileName="Relativity.Testing.Framework.Tests.NETFramework462.TestResults.trx"'

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: Logs
        path: Artifacts/Logs/

    - name: Package
      run: dotnet pack "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo --no-build --include-symbols

    - name: Upload NuGet Packages
      uses: actions/upload-artifact@v2
      with:
        name: NuGetPackages
        path: Artifacts/NuGet/

    - name: Get OTEL Token
      id: GetOtelToken
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      run: |
        accessToken=$(curl --request POST \
          'https://login.microsoftonline.com/${{ env.DirectoryId }}/oauth2/v2.0/token' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode 'grant_type=client_credentials' \
          --data-urlencode 'client_id=${{ env.ClientId }}' \
          --data-urlencode 'client_secret=${{ env.ClientSecret }}' \
          --data-urlencode 'scope=https://vault.azure.net/.default' \
          | jq '.access_token' | tr -d '"')

        otelToken=$(curl --request GET \
          'https://testengineering-github.vault.azure.net/secrets/OtelWebhookTokenForTestEngineering?api-version=7.1' \
          --header "Authorization: Bearer $accessToken" \
          | jq '.value' | tr -d '"')

        echo "::set-output name=OtelToken::$otelToken"

    - name: SendBuildEvent
      uses: actions/checkout@v2
      with:
        repository: relativityone/SendBuildEvent
        ref: refs/heads/main
        token: $
        persist-credentials: false
        path: env.CUSTOM_ACTION_DIRECTORY
      uses: env.CUSTOM_ACTION_DIRECTORY
      with:
        otel-token: ${{ steps.GetOtelToken.outputs.OtelToken }}
        team-id: "PTCI-1599"
        build-status: ${{ job.status }}
